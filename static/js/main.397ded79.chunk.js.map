{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["CharacterCard","props","className","onClick","selectCharacter","id","alt","name","src","image","Wrapper","children","Header","type","highScore","currentScore","App","state","characters","selected","alert","includes","setState","setTimeout","removeAlert","push","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","this","variant","style","display","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"yiCAgBeA,MAbf,SAAuBC,GACrB,OACI,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBACbC,QAAS,kBAAMF,EAAMG,gBAAgBH,EAAMI,MAC3C,yBACAC,IAAKL,EAAMM,KACXC,IAAKP,EAAMQ,W,aCHNC,MAJf,SAAiBT,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCgB1BC,MAjBf,SAAgBX,GACZ,OACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,oBACX,wBAAIA,UAAU,aAAd,eACA,uBAAGA,UAAU,QAAb,gFAEJ,yBAAKW,KAAK,QAAQX,UAAU,mBAA5B,cACe,0BAAMA,UAAU,oBAAoBG,GAAG,cAAcJ,EAAMa,YAE1E,yBAAKD,KAAK,QAAQX,UAAU,mBAA5B,SACU,0BAAMA,UAAU,oBAAoBG,GAAG,iBAAiBJ,EAAMc,iB,OC+ErEC,E,4MApFbC,MAAQ,CACNC,aACAC,SAAU,GACVL,UAAW,EACXC,aAAc,EACdK,MAAO,Q,EAGThB,gBAAkB,SAAAC,GAChB,IAAMc,EAAW,EAAKF,MAAME,SAE5B,GAAKA,EAASE,SAAShB,GAiBrB,EAAKiB,SAAS,CAAEP,aAAc,EAAGI,SAAU,GAAIC,MAAO,SACtDG,WAAW,EAAKC,YAAa,SAlBH,CAC1BL,EAASM,KAAKpB,GAEd,IAAMa,EAAa,EAAKD,MAAMC,WAE9B,EAAKQ,QAAQR,GACb,EAAKI,SAAS,CACZP,aAAc,EAAKE,MAAMF,aAAe,EACxCG,WAAYA,EACZC,SAAUA,IAGR,EAAKF,MAAMF,cAAgB,EAAKE,MAAMH,WACxC,EAAKQ,SAAS,CAAER,UAAW,EAAKG,MAAMH,UAAY,M,EASxDU,YAAc,WACZ,EAAKF,SAAS,CAAEF,MAAO,U,EAGzBM,QAAU,SAAAC,GAIR,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,G,uDAGC,IAAD,OACP,OACE,yBAAKzB,UAAU,aACb,kBAAC,EAAD,CACEa,aAAcoB,KAAKlB,MAAMF,aACzBD,UAAWqB,KAAKlB,MAAMH,YAExB,kBAAC,IAAD,CAAOsB,QAAQ,mBAAmBC,MAAO,CAACC,QAASH,KAAKlB,MAAMG,QAC5D,iFAIF,kBAAC,EAAD,KACGe,KAAKlB,MAAMC,WAAWqB,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACEpC,gBAAiB,EAAKA,gBACtBC,GAAImC,EAAUnC,GACdoC,IAAKD,EAAUnC,GACfI,MAAO+B,EAAU/B,MACjBF,KAAMiC,EAAUjC,gB,GA7EZmC,a,MCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.397ded79.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CharacterCard(props) {\r\n  return (\r\n      <div className=\"card\">\r\n        <div className=\"img-container\" \r\n          onClick={() => props.selectCharacter(props.id)}>\r\n          <img \r\n          alt={props.name} \r\n          src={props.image} />\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default CharacterCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"header-container\">\r\n                <h1 className=\"display-4\">Clicky Game</h1>\r\n                <p className=\"lead\">Click on a picture to gain points, but don't click on the same image twice!</p>\r\n            </div>\r\n            <div type=\"badge\" className=\"btn btn-primary\">\r\n                High Score <span className=\"badge badge-light\" id=\"high-score\">{props.highScore}</span>\r\n            </div>\r\n            <div type=\"badge\" className=\"btn btn-primary\">\r\n                Score <span className=\"badge badge-light\" id=\"current-score\">{props.currentScore}</span>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport CharacterCard from \"./components/CharacterCard\";\r\nimport characters from \"./characters.json\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Header from \"./components/Header\";\r\nimport Alert from 'react-bootstrap/Button';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    characters,\r\n    selected: [],\r\n    highScore: 0,\r\n    currentScore: 0,\r\n    alert: \"none\"\r\n  };\r\n\r\n  selectCharacter = id => {\r\n    const selected = this.state.selected;\r\n\r\n    if (!selected.includes(id)) {\r\n      selected.push(id);\r\n\r\n      const characters = this.state.characters;\r\n\r\n      this.shuffle(characters);\r\n      this.setState({\r\n        currentScore: this.state.currentScore + 1,\r\n        characters: characters,\r\n        selected: selected\r\n      });\r\n\r\n      if (this.state.currentScore >= this.state.highScore) {\r\n        this.setState({ highScore: this.state.highScore + 1 })\r\n      }\r\n    }\r\n    else {\r\n      this.setState({ currentScore: 0, selected: [], alert: \"flex\" });\r\n      setTimeout(this.removeAlert, 3000);\r\n    }\r\n  };\r\n\r\n  removeAlert = () => {\r\n    this.setState({ alert: \"none\" })\r\n  }\r\n\r\n  shuffle = array => {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n\r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header\r\n          currentScore={this.state.currentScore}\r\n          highScore={this.state.highScore}\r\n        />\r\n        <Alert variant=\"danger mr-5 ml-5\" style={{display: this.state.alert}}>\r\n          <p>\r\n            You selected someone twice. You gotta start over!\r\n          </p>\r\n        </Alert>\r\n        <Wrapper>\r\n          {this.state.characters.map(character => (\r\n            <CharacterCard\r\n              selectCharacter={this.selectCharacter}\r\n              id={character.id}\r\n              key={character.id}\r\n              image={character.image}\r\n              name={character.name}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}